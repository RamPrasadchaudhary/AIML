{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1.Given two dictionary,merg then into a single dictionary"],"metadata":{"id":"sNOUJ5Jy01oN"}},{"cell_type":"code","source":["dict1 = {'a': 1, 't': 2}\n","dict2 = {'b': 3, 'c': 4}\n","\n","dict1.update(dict2)\n","print(dict1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ebhj_fk61A03","executionInfo":{"status":"ok","timestamp":1694277910838,"user_tz":-330,"elapsed":438,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"b5894015-e73a-4b04-c2cd-9be863447739"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 't': 2, 'b': 3, 'c': 4}\n"]}]},{"cell_type":"markdown","source":["# 2.write a program that find the most frequent element in list."],"metadata":{"id":"EGmeqldm1b_l"}},{"cell_type":"code","source":["def most_frequent_element(lst):\n","\n","    element_count = {}\n","    for element in lst:\n","        if element in element_count:\n","            element_count[element] += 1\n","        else:\n","            element_count[element] = 1\n","    most_frequent = None\n","    max_frequency = 0\n","    for element, frequency in element_count.items():\n","        if frequency > max_frequency:\n","            most_frequent = element\n","            max_frequency = frequency\n","\n","    return most_frequent, max_frequency\n","my_list = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]\n","element, frequency = most_frequent_element(my_list)\n","\n","print(f\"The most frequent element is {element} with a frequency of {frequency}.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7-WKPoDZ2Ffp","executionInfo":{"status":"ok","timestamp":1694278141421,"user_tz":-330,"elapsed":427,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"b4e41327-9eba-418c-be33-2485d95d4464"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The most frequent element is 4 with a frequency of 4.\n"]}]},{"cell_type":"markdown","source":["# 3.Implement the function that remove a key value pair from dictionary"],"metadata":{"id":"-hf1-ti6HmfD"}},{"cell_type":"code","source":["def remove_key_value(dictionary, key_to_remove):\n","    if key_to_remove in dictionary:\n","        del dictionary[key_to_remove]\n","        return True\n","    else:\n","        return False\n","my_dict = {'a': 1, 'b': 2, 'c': 3}\n","key_to_remove = 'b'\n","result = remove_key_value(my_dict, key_to_remove)\n","\n","if result:\n","    print(f\"Key '{key_to_remove}' and its corresponding value removed.\")\n","else:\n","    print(f\"Key '{key_to_remove}' not found in the dictionary.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WLqTVWl2IEky","executionInfo":{"status":"ok","timestamp":1694333315145,"user_tz":-330,"elapsed":12,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"a1148b94-2fdf-44de-9861-409f0b0b3818"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Key 'b' and its corresponding value removed.\n"]}]},{"cell_type":"markdown","source":["## 4.create a program that check if two sets have any\n","## element in common."],"metadata":{"id":"j4ApQwIaI5H4"}},{"cell_type":"code","source":["def have_common_elements(set1, set2):\n","    common_elements = set1.intersection(set2)\n","    return len(common_elements) > 0\n","\n","# Example usage:\n","set_a = {1, 2, 3, 4, 5}\n","set_b = {4, 5, 6, 7, 8}\n","\n","if have_common_elements(set_a, set_b):\n","    print(\"The two sets have common elements.\")\n","else:\n","    print(\"The two sets have no common elements.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D70cjZzPJghh","executionInfo":{"status":"ok","timestamp":1694333597932,"user_tz":-330,"elapsed":456,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"a7108312-b222-4543-c3d8-8f332fe91395"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The two sets have common elements.\n"]}]},{"cell_type":"markdown","source":["# 5.Given a list of dictionaries,find the dictionary with the highest value for a specific key."],"metadata":{"id":"zqKynayGKFn3"}},{"cell_type":"code","source":["def find_dict_with_highest_value(lst_of_dicts, key_to_check):\n","    if not lst_of_dicts:\n","        return None\n","    max_dict = max(lst_of_dicts, key=lambda x: x.get(key_to_check, 0))\n","\n","    return max_dict\n","list_of_dicts = [\n","    {'name': 'Alice', 'score': 85},\n","    {'name': 'Bob', 'score': 92},\n","    {'name': 'Charlie', 'score': 78},\n","    {'name': 'David', 'score': 95}\n","]\n","\n","key_to_check = 'score'\n","result = find_dict_with_highest_value(list_of_dicts, key_to_check)\n","\n","if result:\n","    print(f\"The dictionary with the highest '{key_to_check}' is:\")\n","    print(result)\n","else:\n","    print(\"The list is empty.\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VC7FkGp6Ka58","executionInfo":{"status":"ok","timestamp":1694333856693,"user_tz":-330,"elapsed":408,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"ab49e36b-e949-4a4c-a2fc-126f4b067a95"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The dictionary with the highest 'score' is:\n","{'name': 'David', 'score': 95}\n"]}]},{"cell_type":"markdown","source":["# 6.Write a python program that counts the number of occurrences of each character in a given string using a dictionary."],"metadata":{"id":"NpUY6v74Kxcb"}},{"cell_type":"code","source":["def count_characters(string):\n","    char_count = {}\n","    for char in string:\n","        if char in char_count:\n","            char_count[char] += 1\n","        else:\n","            char_count[char] = 1\n","\n","    return char_count\n","input_string = \"hello, world!\"\n","result = count_characters(input_string)\n","for char, count in result.items():\n","    print(f\"'{char}': {count}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JNaR9Vm-LTb8","executionInfo":{"status":"ok","timestamp":1694334059485,"user_tz":-330,"elapsed":735,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"ace61dc1-1d6b-4eb1-97b0-2f5e894f15d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["'h': 1\n","'e': 1\n","'l': 3\n","'o': 2\n","',': 1\n","' ': 1\n","'w': 1\n","'r': 1\n","'d': 1\n","'!': 1\n"]}]},{"cell_type":"markdown","source":["# 7.Given two set, find the union intersection and difference between them."],"metadata":{"id":"rI8ipZ7-MGtx"}},{"cell_type":"code","source":["\n","set1 = {1, 2, 3, 4, 5}\n","set2 = {3, 4, 5, 6, 7}\n","union_result = set1.union(set2)\n","print(\"Union:\", union_result)\n","\n","intersection_result = set1.intersection(set2)\n","print(\"Intersection:\", intersection_result)\n","\n","difference_result1 = set1.difference(set2)\n","print(\"Difference (set1 - set2):\", difference_result1)\n","\n","difference_result2 = set2.difference(set1)\n","print(\"Difference (set2 - set1):\", difference_result2)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nYhon-SSMgxX","executionInfo":{"status":"ok","timestamp":1694334371370,"user_tz":-330,"elapsed":433,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"d48319e1-dbf6-4ae0-83b4-83a9c77c1827"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Union: {1, 2, 3, 4, 5, 6, 7}\n","Intersection: {3, 4, 5}\n","Difference (set1 - set2): {1, 2}\n","Difference (set2 - set1): {6, 7}\n"]}]},{"cell_type":"markdown","source":["# #8.Create a function that take a list of dictionary  and short them based on the specified key."],"metadata":{"id":"6mJi0Cf2MuII"}},{"cell_type":"code","source":["def sort_list_of_dicts(lst_of_dicts, key_to_sort_by):\n","\n","    sorted_list = sorted(lst_of_dicts, key=lambda x: x.get(key_to_sort_by, 3))\n","\n","    return sorted_list\n","\n","\n","list_of_dicts = [\n","    {'name': 'Alice', 'score': 85},\n","    {'name': 'Bob', 'score': 92},\n","    {'name': 'Charlie', 'score': 78},\n","    {'name': 'David', 'score': 95}\n","]\n","\n","key_to_sort_by = 'name'\n","sorted_result = sort_list_of_dicts(list_of_dicts, key_to_sort_by)\n","\n","for item in sorted_result:\n","    print(item)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0lRaRCqmNiT_","executionInfo":{"status":"ok","timestamp":1694334778842,"user_tz":-330,"elapsed":663,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"a1f16273-b931-407f-8f0e-529a990fe770"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Alice', 'score': 85}\n","{'name': 'Bob', 'score': 92}\n","{'name': 'Charlie', 'score': 78}\n","{'name': 'David', 'score': 95}\n"]}]},{"cell_type":"markdown","source":["# 9.write a program that finds the average value of all the element in the list of dictionary"],"metadata":{"id":"Kz3ClmMNOoLA"}},{"cell_type":"code","source":["def calculate_average(list_of_dicts):\n","    total_sum = 0\n","    total_count = 0\n","\n","    for dictionary in list_of_dicts:\n","        for value in dictionary.values():\n","            if isinstance(value, (int, float)):\n","                total_sum += value\n","                total_count += 1\n","\n","    if total_count > 0:\n","        average = total_sum / total_count\n","        return average\n","    else:\n","        return None\n","list_of_dicts = [\n","    {'value1': 10, 'value2': 20, 'value3': 30},\n","    {'value1': 5, 'value2': 15, 'value3': 25},\n","    {'value1': 8.5, 'value2': 17.5, 'value3': 27.5}\n","]\n","\n","average_value = calculate_average(list_of_dicts)\n","\n","if average_value is not None:\n","    print(f\"The average value is: {average_value:.2f}\")\n","else:\n","    print(\"No numeric values found in the dictionaries.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LPJxcuNO4RL","executionInfo":{"status":"ok","timestamp":1694334952947,"user_tz":-330,"elapsed":675,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"bf74e745-8ce5-4668-b271-ac5a517a285d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The average value is: 17.61\n"]}]},{"cell_type":"markdown","source":["# 10.Implement a function that take a list of string and return a set of unique characters present in all strings."],"metadata":{"id":"G9tPNWnwPFVq"}},{"cell_type":"code","source":["def unique_characters_in_all_strings(string_list):\n","    if not string_list:\n","        return set()\n","    common_chars = set(string_list[0])\n","    for string in string_list[1:]:\n","        common_chars &= set(string)\n","\n","    return common_chars\n","\n","\n","string_list = [\"apple\", \"banana\", \"cherry\"]\n","result = unique_characters_in_all_strings(string_list)\n","\n","print(\"Unique characters present in all strings:\", result)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Oe4CJ0yePtgO","executionInfo":{"status":"ok","timestamp":1694335211995,"user_tz":-330,"elapsed":410,"user":{"displayName":"RAM PRASAD CHAUDHARY","userId":"11879361387894913678"}},"outputId":"92e17ac2-02c2-4774-93fc-565473efb9da"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique characters present in all strings: set()\n"]}]}]}